package cliente;

import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.ParseException;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pojos.Jogador;
import servidor.I_RMI;

public class LayoutRelatorioRanking extends javax.swing.JDialog {
    I_RMI servidor;
    LayoutUsuario layoutUsuario;
    /** Creates new form LayoutRelatorioRanking */
    public LayoutRelatorioRanking(LayoutUsuario layUser) throws ParseException {
        initComponents();
        layoutUsuario = layUser;
        layoutUsuario.setEnabled(false);
        this.setTitle("Relatório Geral do Ranking do jogo");
        this.setVisible(true);
//        RMI_ServidorSemRegistry rMI_ServidorSemRegistry = new RMI_ServidorSemRegistry();
        instanciaConexaoServidor();
        recuperaTodosJogadores();
        this.setModal(true);
        this.setVisible(true);
    }

    private LayoutRelatorioRanking() {}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listagemJogadores = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        pesqUser = new javax.swing.JTextField();
        sair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        listagemJogadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Colocação", "Código do Jogador", "Nome Jogador", "Pontuação", "Fases Completadas", "Salvado em"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listagemJogadores.setName("listagemJogadores"); // NOI18N
        listagemJogadores.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(listagemJogadores);

        jLabel1.setText("Pesquise seu resultado pelo nome do jogador:");
        jLabel1.setName("jLabel1"); // NOI18N

        pesqUser.setName("pesqUser"); // NOI18N
        pesqUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesqUserKeyReleased(evt);
            }
        });

        sair.setText("Sair");
        sair.setName("sair"); // NOI18N
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pesqUser, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(jLabel1)
                        .addGap(181, 181, 181)
                        .addComponent(sair, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pesqUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
     private void instanciaConexaoServidor(){
         try {
            Registry registry = LocateRegistry.getRegistry("localhost");
            servidor = (I_RMI) Naming.lookup("rmi://localhost:1099/JogoEducativo");
            } catch (RemoteException e) {
            System.out.println();
            System.out.println("RemoteException: " + e.toString());
        } catch (NotBoundException e) {
            System.out.println();
            System.out.println("NotBoundException: " + e.toString());
        } catch (Exception e) {
            System.out.println("Erro: " + e.getMessage());
        }
    }   
    
    private void recuperaTodosJogadores(){
        try {
            populaTableInicial(servidor.retornaRanking());
        } catch (RemoteException ex) {
            ex.printStackTrace();
        }
    }
    
     private void populaTableInicial(List dados){         
        if(dados != null){
           DefaultTableModel modelo = (DefaultTableModel) listagemJogadores.getModel();
           modelo.setNumRows(0);
           try{    
               int i = 1;
               for (Iterator it = dados.iterator(); it.hasNext();) {
                   Jogador jog = (Jogador)it.next();
                   String descricao = jog.getNome();
                    int codigo = jog.getCodigo();
                    Date dtSalvo = jog.getDataSalvo();
                    int pontuacao = jog.getPontuacao();
                    int qtdeFases = jog.getQtdeFases();
                    
                    modelo.addRow(new Object[]{i++,codigo,descricao,pontuacao,qtdeFases,dtSalvo});
               }     
                listagemJogadores.setModel(modelo);
          }catch(Exception ex){
              ex.printStackTrace();
          }
      }else{
            JOptionPane.showMessageDialog(null, "Não há jogadores salvos ainda no Ranking!", "Dados não encontrados"
                                          , JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
     
    private void pesqUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesqUserKeyReleased
        List retorno = null;
        try {
            retorno = servidor.selectJogador(pesqUser.getText());
        } catch (RemoteException ex) {
            ex.printStackTrace();
        }
        populaTableInicial(retorno);
        
    }//GEN-LAST:event_pesqUserKeyReleased

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        this.dispose();
        layoutUsuario.setVisible(true);
        layoutUsuario.setEnabled(true);
    }//GEN-LAST:event_sairActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {             
                    new LayoutRelatorioRanking().setVisible(true);               
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listagemJogadores;
    private javax.swing.JTextField pesqUser;
    private javax.swing.JButton sair;
    // End of variables declaration//GEN-END:variables
}
