package cliente;

import facades.FacadeLogin;
import java.rmi.RemoteException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import pojos.Dicas;
import servidor.I_RMI;

public class ManipularDicas extends javax.swing.JDialog {

    Dicas dica = new Dicas();
    I_RMI servidor;
    LayoutAdministrador layoutAdministrador;
    /** Creates new form ManipularDicas */
   
    ManipularDicas(LayoutAdministrador aThis) {
        layoutAdministrador = aThis;
        this.setModal(true);
        initComponents();
        this.setLocationRelativeTo(this);
        
        FacadeLogin facadeLogin = new FacadeLogin();
        ArrayList dadosFacade = facadeLogin.fachadaLogin();   
        servidor = (I_RMI) dadosFacade.get(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nova = new javax.swing.JButton();
        gravar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descricao = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        voltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText("Descrição:");
        jLabel1.setName("jLabel1"); // NOI18N

        nova.setText("Nova");
        nova.setName("nova"); // NOI18N
        nova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaActionPerformed(evt);
            }
        });

        gravar.setText("Gravar");
        gravar.setName("gravar"); // NOI18N
        gravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gravarActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        descricao.setColumns(20);
        descricao.setRows(5);
        descricao.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 255), 1, true));
        descricao.setName("descricao"); // NOI18N
        jScrollPane1.setViewportView(descricao);

        jSeparator1.setName("jSeparator1"); // NOI18N

        voltar.setText("Voltar");
        voltar.setName("voltar"); // NOI18N
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nova)
                                .addGap(62, 62, 62)
                                .addComponent(gravar)
                                .addGap(33, 33, 33)
                                .addComponent(voltar)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)))
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nova)
                    .addComponent(gravar)
                    .addComponent(voltar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravarActionPerformed
          if(!descricao.getText().equals("")){                
                dica.setDescricao(descricao.getText());
                try {
                    int vlrRetorno = servidor.gravaDicas(dica);
                    if(vlrRetorno <= 0){
                        JOptionPane.showMessageDialog(null,"Erro ao inserir a dica!", "Inserção", JOptionPane.ERROR_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(null,"Dica cadastrada com sucesso!", "Inserção", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (RemoteException ex) {
                    ex.printStackTrace();
                }
          }else{
              JOptionPane.showMessageDialog(null,"A descrição deve ser informada!", "Dados incorretos", JOptionPane.INFORMATION_MESSAGE);
          }
    }//GEN-LAST:event_gravarActionPerformed

    private void novaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaActionPerformed
        dica = new Dicas();
        descricao.setText("");
    }//GEN-LAST:event_novaActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        this.dispose();
        layoutAdministrador.dadosParaListagemDicas();
        layoutAdministrador.setModal(true);
        layoutAdministrador.setVisible(true);
    }//GEN-LAST:event_voltarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descricao;
    private javax.swing.JButton gravar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton nova;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
